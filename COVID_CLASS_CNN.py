# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Hb4AfzLtWn274BO7WhUo9fKl6N2hddXj
"""



import numpy as np
import matplotlib.pyplot as plt
import keras
from keras.layers import Dense, Conv2D, MaxPool2D, Dropout, Flatten
from keras.models import Sequential
from keras.preprocessing import image

train_datagen=image.ImageDataGenerator(rescale=1/255, horizontal_flip=True, 
                                       zoom_range=0.2, shear_range=0.2)
train_data=train_datagen.flow_from_directory(directory='/content/Train', target_size=(256,256), 
                                             batch_size=1, class_mode='binary' )

train_data.class_indices

test_datagen=image.ImageDataGenerator(rescale=1/255 
                                      )
test_data=test_datagen.flow_from_directory(directory='/content/Test', target_size=(256,256), 
                                             batch_size=1, class_mode='binary' )

model=Sequential()
model.add(Conv2D(filters=32, kernel_size=(3,3), activation='relu', input_shape=(256,256,3)))

model.add(Conv2D(filters=64, kernel_size=(3,3), activation='relu'))
model.add(MaxPool2D())
model.add(Dropout(rate=0.25))

model.add(Conv2D(filters=64, kernel_size=(3,3), activation='relu'))
model.add(MaxPool2D())
model.add(Dropout(rate=0.25))


model.add(Conv2D(filters=64, kernel_size=(3,3), activation='relu'))
model.add(MaxPool2D())
model.add(Dropout(rate=0.25))

model.add(Flatten())
model.add(Dense(units=64, activation='relu'))
model.add(Dropout(rate=0.25))
model.add(Dense(units=1, activation='sigmoid'))

model.compile(loss=keras.losses.binary_crossentropy, optimizer="adam", metrics=['acc'])

model.summary()

model.fit_generator(train_data, steps_per_epoch=8, epochs=12, validation_steps=2, validation_data=test_data)

from google.colab import drive
drive.mount('/content/drive')

from google.colab import drive
drive.mount('/content/gdrive')

from zipfile import ZipFile
file_name = "/content/Train.zip"

with ZipFile(file_name, 'r') as zip:
  zip.extractall()
  print('Done')

from zipfile import ZipFile
file_name = "/content/Test.zip"

with ZipFile(file_name, 'r') as zip:
  zip.extractall()
  print('Done')